<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>com.homeadvisor.kafka</groupId>
   <artifactId>kafdrop</artifactId>
   <version>2.1.0</version>

   <description>For when you have a Kaf(ka) cluster to monitor</description>

   <properties>
      <spring.boot.version>2.1.8.RELEASE</spring.boot.version>
      <additionalparam>-Xdoclint:none</additionalparam>
      <curator.version>2.10.0</curator.version>

      <!-- name of parameter changed in latest mvn javadoc plugin version-->
      <additionalOptions>-Xdoclint:none</additionalOptions>
   </properties>

   <scm>
       <connection>scm:git:git@github.com:HomeAdvisor/Kafdrop.git</connection>
       <developerConnection>scm:git:git@github.com:HomeAdvisor/Kafdrop.git</developerConnection>
       <tag>HEAD</tag>
   </scm>

   <repositories>
     <repository>
       <id>central</id>
       <url>https://repo1.maven.org/maven2</url>
     </repository>
     <repository>
       <id>confluent</id>
       <url>https://packages.confluent.io/maven/</url>
     </repository>
   </repositories>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <!-- Import dependency management from Spring Boot -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-parent</artifactId>
            <version>${spring.boot.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <dependency>
         <groupId>commons-lang</groupId>
         <artifactId>commons-lang</artifactId>
         <version>2.6</version>
      </dependency>
      <dependency>
         <groupId>org.apache.curator</groupId>
         <artifactId>curator-recipes</artifactId>
         <version>${curator.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.curator</groupId>
         <artifactId>curator-x-discovery</artifactId>
         <version>${curator.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.zookeeper</groupId>
         <artifactId>zookeeper</artifactId>
         <version>3.4.13</version>
         <exclusions>
            <exclusion>
               <groupId>log4j</groupId>
               <artifactId>log4j</artifactId>
            </exclusion>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-log4j12</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.apache.kafka</groupId>
         <artifactId>kafka_2.9.2</artifactId>
         <version>0.8.2.2</version>
         <exclusions>
            <exclusion>
               <groupId>log4j</groupId>
               <artifactId>log4j</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.apache.kafka</groupId>
         <artifactId>kafka-clients</artifactId>
         <!-- Kafka client library deliberately low until this is fixed: https://issues.apache.org/jira/browse/KAFKA-9212 -->
         <version>2.2.1</version>
      </dependency>
      <dependency>
         <groupId>org.freemarker</groupId>
         <artifactId>freemarker</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.retry</groupId>
         <artifactId>spring-retry</artifactId>
      </dependency>
      <dependency>
         <groupId>io.confluent</groupId>
         <artifactId>kafka-avro-serializer</artifactId>
         <version>3.2.1</version>
         <exclusions>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-log4j12</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.apache.avro</groupId>
         <artifactId>avro</artifactId>
         <version>1.8.1</version>
      </dependency>
      <dependency>
         <groupId>com.google.code.findbugs</groupId>
         <artifactId>jsr305</artifactId>
         <version>3.0.2</version>
      </dependency>
      <dependency>
         <groupId>com.google.code.gson</groupId>
         <artifactId>gson</artifactId>
         <version>2.8.5</version>
      </dependency>

      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-pool2</artifactId>
         <version>2.7.0</version>
      </dependency>

      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-1.2-api</artifactId>
      </dependency>

      <!-- Spring Boot -->
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
         <exclusions>
            <exclusion>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-starter-logging</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-freemarker</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-log4j2</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-actuator</artifactId>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>1.0.6</version>
      </dependency>

      <!-- Spring -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
      </dependency>

      <!-- Swagger API docs -->
      <dependency>
         <groupId>io.springfox</groupId>
         <artifactId>springfox-swagger2</artifactId>
         <version>2.7.0</version>
      </dependency>

      <!-- Test Dependencies -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.11</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.easymock</groupId>
         <artifactId>easymock</artifactId>
         <version>3.3.1</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest</artifactId>
         <version>2.1</version>
         <scope>test</scope>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
         <groupId>org.codehaus.groovy</groupId>
         <artifactId>groovy-all</artifactId>
         <version>2.4.6</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.spockframework</groupId>
         <artifactId>spock-core</artifactId>
         <version>1.0-groovy-2.4</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.codehaus.groovy.modules.http-builder</groupId>
         <artifactId>http-builder</artifactId>
         <version>0.7.1</version>
         <scope>test</scope>
      </dependency>
   </dependencies>



   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.2</version>
            <configuration>
               <source>1.8</source>
               <target>1.8</target>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptors>
                  <descriptor>src/main/assembly/bin.xml</descriptor>
               </descriptors>
            </configuration>
            <version>2.2.1</version>
         </plugin>
         <plugin>
            <!-- Build an executable JAR -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <configuration>
               <archive>
                  <manifest>
                     <addClasspath>true</addClasspath>
                     <classpathPrefix>lib/</classpathPrefix>
                     <mainClass>com.homeadvisor.kafdrop.KafDrop</mainClass>
                  </manifest>
               </archive>
            </configuration>
         </plugin>
         <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.4.13</version>
            <configuration>
               <imageName>kafdrop</imageName>
               <forceTags>true</forceTags>
               <dockerDirectory>${project.build.directory}/docker-ready</dockerDirectory>
               <imageTags>
                  <imageTag>${project.version}</imageTag>
                  <imageTag>latest</imageTag>
               </imageTags>
               <resources>
                  <resource>
                     <targetPath>/</targetPath>
                     <directory>${project.build.directory}</directory>
                     <include>${project.build.finalName}-bin.tar.gz</include>
                  </resource>
               </resources>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.7</version>
            <executions>
               <execution>
                  <id>prepare-dockerfile</id>
                  <phase>validate</phase>
                  <goals>
                     <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/docker-ready</outputDirectory>
                     <resources>
                        <resource>
                           <directory>src/main/docker</directory>
                           <filtering>true</filtering>
                        </resource>
                     </resources>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>${spring.boot.version}</version>
            <executions>
               <execution>
                  <goals>
                     <goal>repackage</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <excludes>
               <exclude>static/**</exclude>
            </excludes>
         </resource>
         <resource>
            <directory>src/main/resources</directory>
            <filtering>false</filtering>
            <includes>
               <include>static/**</include>
            </includes>
         </resource>
      </resources>
   </build>

   <profiles>
      <profile>
         <id>api-test</id>
         <properties>
            <test.base.dir>api-test</test.base.dir>
            <test.output.dir>api-test-classes</test.output.dir>
            <api.test.report.dir>${project.build.directory}/api-surefire-reports</api.test.report.dir>
         </properties>
         <dependencies>
         </dependencies>
         <build>
            <plugins>

               <!-- Create a new goal that starts ZK, Kakfa, and Kafdrop for integration tests -->
               <!-- Credit: https://github.com/charithe/kafka-maven-plugin                     -->

               <!-- Start a ZK and Kafka cluster -->
               <plugin>
                  <groupId>com.github.charithe</groupId>
                  <artifactId>kafka-maven-plugin</artifactId>
                  <version>1.0.0</version>
                  <configuration>
                     <zookeeperPort>2180</zookeeperPort>
                     <kafkaPort>9092</kafkaPort>
                  </configuration>

                  <!-- Override Kafka and ZK versions to match Kafdrop -->
                  <dependencies>
                     <dependency>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>zookeeper</artifactId>
                        <version>3.4.8</version>
                     </dependency>
                     <dependency>
                        <groupId>org.apache.kafka</groupId>
                        <artifactId>kafka_2.9.2</artifactId>
                        <version>0.8.2.2</version>
                     </dependency>
                     <dependency>
                        <groupId>org.apache.kafka</groupId>
                        <artifactId>kafka-clients</artifactId>
                        <version>0.10.2.2</version>
                     </dependency>
                  </dependencies>

                  <!-- Start/stop ZK and Kafka with pre and post integration phases-->
                  <executions>
                     <execution>
                        <id>zk-kafka-pre-integration</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                           <goal>start-kafka-broker</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>zk-kafka-post-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                           <goal>stop-kafka-broker</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>

               <!-- Spring Boot build/start -->
               <plugin>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-maven-plugin</artifactId>
                  <version>${spring.boot.version}</version>

                  <configuration>
                     <mainClass>${start-class}</mainClass>
                     <!-- Don't want to fork Kafdrop or it prevents the subsequent steps -->
                     <!-- Careful using JVM args or it forces a fork                     -->
                     <fork>false</fork>
                     <arguments>
                        <argument>--server.port:11017</argument>
                        <argument>--zookeeper.connect=localhost:2180</argument>
                     </arguments>
                  </configuration>
                  <executions>
                     <execution>
                        <goals>
                           <goal>repackage</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>kafdrop-pre-integration</id>
                        <phase>integration-test</phase>
                        <goals>
                           <goal>start</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>kafdrop-post-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                           <goal>stop</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>

               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>2.18</version>
                  <configuration>
                     <testSourceDirectory>${project.basedir}/src/api-test/java</testSourceDirectory>
                     <includes>
                        <include>**/*Spec.java</include>
                     </includes>
                     <reportsDirectory>${api.test.report.dir}</reportsDirectory>
                     <argLine>${test.arguments}</argLine>
                  </configuration>
                  <executions>
                     <execution>
                        <phase>integration-test</phase>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-report-plugin</artifactId>
                  <version>2.18</version>
                  <configuration>
                     <outputDirectory>${project.build.directory}/api-test-report</outputDirectory>
                     <reportsDirectory>${api.report.dir}</reportsDirectory>
                  </configuration>
                  <executions>
                     <execution>
                        <phase>integration-test</phase>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-failsafe-plugin</artifactId>
                  <version>2.20</version>
                  <executions>
                     <execution>
                        <goals>
                           <goal>integration-test</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.codehaus.gmavenplus</groupId>
                  <artifactId>gmavenplus-plugin</artifactId>
                  <version>1.5</version>
                  <executions>
                     <execution>
                        <phase>integration-test</phase>
                        <goals>
                           <goal>testCompile</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <testSources>
                        <testSource>
                           <directory>${project.basedir}/src/${test.base.dir}/groovy</directory>
                           <includes>
                              <include>**/*.groovy</include>
                           </includes>
                        </testSource>
                     </testSources>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
